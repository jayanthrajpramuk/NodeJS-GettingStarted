{
  "_args": [
    [
      {
        "raw": "gulp-jscs@2.0.0",
        "scope": null,
        "escapedName": "gulp-jscs",
        "name": "gulp-jscs",
        "rawSpec": "2.0.0",
        "spec": "2.0.0",
        "type": "version"
      },
      "C:\\Jayanth\\Personal\\technical\\svn-codebase\\NodeJS-Getting Started"
    ]
  ],
  "_from": "gulp-jscs@2.0.0",
  "_id": "gulp-jscs@2.0.0",
  "_inCache": true,
  "_location": "/gulp-jscs",
  "_nodeVersion": "0.12.5",
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.11.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-jscs@2.0.0",
    "scope": null,
    "escapedName": "gulp-jscs",
    "name": "gulp-jscs",
    "rawSpec": "2.0.0",
    "spec": "2.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-jscs/-/gulp-jscs-2.0.0.tgz",
  "_shasum": "ccdcc845e87db307b234d6e5b0c1a265940019f2",
  "_shrinkwrap": null,
  "_spec": "gulp-jscs@2.0.0",
  "_where": "C:\\Jayanth\\Personal\\technical\\svn-codebase\\NodeJS-Getting Started",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/jscs-dev/gulp-jscs/issues"
  },
  "dependencies": {
    "gulp-util": "^3.0.4",
    "jscs": "^2.0.0",
    "object-assign": "^3.0.0",
    "through2": "^2.0.0",
    "tildify": "^1.0.0"
  },
  "description": "Check JavaScript code style with jscs",
  "devDependencies": {
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "ccdcc845e87db307b234d6e5b0c1a265940019f2",
    "tarball": "https://registry.npmjs.org/gulp-jscs/-/gulp-jscs-2.0.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "1123102bf664d01b349e4a5622a70788db5b18b6",
  "homepage": "https://github.com/jscs-dev/gulp-jscs#readme",
  "keywords": [
    "gulpplugin",
    "jscs",
    "javascript",
    "ecmascript",
    "js",
    "code",
    "style",
    "validate",
    "lint",
    "ast",
    "check",
    "checker"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "mikesherov",
      "email": "mike.sherov@gmail.com"
    }
  ],
  "name": "gulp-jscs",
  "optionalDependencies": {},
  "readme": "# gulp-jscs [![Build Status](https://travis-ci.org/jscs-dev/gulp-jscs.svg?branch=master)](https://travis-ci.org/jscs-dev/gulp-jscs)\n\n> Check JavaScript code style with [`jscs`](http://jscs.info)\n\n![](screenshot.png)\n\n*Issues with the output should be reported on the `jscs` [issue tracker](https://github.com/jscs-dev/node-jscs/issues).*\n\n\n## Install\n\n```\n$ npm install --save-dev gulp-jscs\n```\n\n\n## Usage\n\n### Reporting\n\n```js\nvar gulp = require('gulp');\nvar jscs = require('gulp-jscs');\n\ngulp.task('default', function () {\n\treturn gulp.src('src/app.js')\n\t\t.pipe(jscs());\n});\n```\n\n### Fixing & reporting\n\n```js\nvar gulp = require('gulp');\nvar jscs = require('gulp-jscs');\n\ngulp.task('default', function () {\n\treturn gulp.src('src/app.js')\n\t\t.pipe(jscs({\n\t\t\tfix: true\n\t\t}))\n\t\t.pipe(gulp.dest('src'));\n});\n```\n\n\n## Results\n\nA `jscs` object will be attached to the file object which can be used for custom error reporting. An example with one error might look like this:\n\n```js\n{\n\tsuccess: false,  // or true if no errors\n\terrorCount: 1,   // number of errors in the errors array\n\terrors: [{       // an array of jscs error objects\n\t\tfilename: 'index.js',  // basename of the file\n\t\trule: 'requireCamelCaseOrUpperCaseIdentifiers',  // the rule which triggered the error\n\t\tmessage: 'All identifiers must be camelCase or UPPER_CASE',  // error message\n\t\tline: 32,  // error line number\n\t\tcolumn: 7  // error column\n\t}]\n};\n```\n\n\n## API\n\n### jscs([options])\n\n#### options\n\nType: `object`\n\nSee the `jscs` [options](http://jscs.info/overview.html#options).\n\nAlternatively you can set the `configPath` *(default: `'.jscsrc'`)* option to the path of a [.jscsrc](http://jscs.info/rules.html) file.\n\nSet `esnext: true` if you want your code to be parsed as ES6 using the harmony\nversion of the esprima parser.\n\nSet `fix: true` if you want jscs to attempt to auto-fix your files. Be sure to pipe to `gulp.dest` if you use this option.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jscs-dev/gulp-jscs.git"
  },
  "scripts": {
    "pretest": "jscs *.js",
    "test": "mocha"
  },
  "version": "2.0.0"
}
